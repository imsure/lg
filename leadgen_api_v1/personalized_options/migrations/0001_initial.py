# Generated by Django 2.0 on 2018-01-30 19:16

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(choices=[('H', 'Home'), ('W', 'Work'), ('SC', 'School'), ('SH', 'Shopping'), ('M', 'Maintenance'), ('R', 'Recreational'), ('PD', 'Pickup/DropOff')], max_length=2, verbose_name='Purpose of activity')),
                ('from_id', models.IntegerField(verbose_name='ID of from location')),
                ('to_id', models.IntegerField(verbose_name='ID of to location')),
                ('from_lat', models.FloatField(verbose_name='Start latitude')),
                ('from_lon', models.FloatField(verbose_name='Start longitude')),
                ('to_lat', models.FloatField(verbose_name='End latitude')),
                ('to_lon', models.FloatField(verbose_name='End longitude')),
                ('walk_time', models.PositiveSmallIntegerField(blank=True)),
                ('bike_time', models.PositiveSmallIntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='TravelOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('WD', 'Weekday'), ('WE', 'Weekend'), ('MO', 'Monday'), ('TU', 'Tuesday'), ('WE', 'Wednesday'), ('TH', 'Thursday'), ('FR', 'Friday'), ('SA', 'Saturday'), ('SU', 'Sunday')], max_length=2, verbose_name='Activity occurs in which day')),
                ('slot_id', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(96)], verbose_name='ID of time slot this option corresponds to')),
                ('driving_transit_options', models.TextField(blank=True)),
                ('uber_options', models.TextField(blank=True)),
                ('activity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personalized_options.Activity')),
            ],
        ),
        migrations.AddIndex(
            model_name='activity',
            index=models.Index(fields=['id'], name='activity_id_idx'),
        ),
        migrations.AddIndex(
            model_name='activity',
            index=models.Index(fields=['from_id', 'to_id'], name='from_to_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='activity',
            unique_together={('from_id', 'to_id')},
        ),
        migrations.AddIndex(
            model_name='traveloption',
            index=models.Index(fields=['day_of_week', 'slot_id'], name='day_of_week_slot_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='traveloption',
            unique_together={('activity_id', 'day_of_week', 'slot_id')},
        ),
    ]
